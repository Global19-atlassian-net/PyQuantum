# ---------------------------------------------------------------------------------------------------------------------
# PyQuantum.Tools
from PyQuantum.Tools.Assert import Assert
from PyQuantum.Tools.Print import cprint
from PyQuantum.Tools.Hz import to_Hz
# ---------------------------------------------------------------------------------------------------------------------



class Cavity:
    # -----------------------------------------------------------------------------------------------------------------
    # ---------------------------------------------------- INIT -------------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------
    def __init__(self, wc, wa, g, n_atoms, n_levels):
        # --------------------------------------------
        Assert(isinstance(wc, dict), 'wc is not dict')

        for k in wc.keys():
            Assert(wc[k] > 0, 'wc <= 0')

        self.wc = wc
        # --------------------------------------------

        # --------------------------------------------
        Assert(isinstance(wa, list), 'wa is not list')

        for k in range(len(wa)):
            Assert(wa[k] > 0, 'wa <= 0')

        self.wa = wa
        # --------------------------------------------

        # ------------------------------------------
        Assert(isinstance(g, dict), 'g is not dict')

        for k in g.keys():
            Assert(g[k] > 0, 'g <= 0')

        self.g = g
        # ------------------------------------------

        # --------------------------------------------------------
        Assert(isinstance(n_atoms, int), 'n_atoms is not integer')
        Assert(n_atoms > 0, 'n_atoms <= 0')

        self.n_atoms = n_atoms
        # --------------------------------------------------------

        # ---------------------------------------------------------
        Assert(isinstance(n_levels, int), 'n_atoms is not integer')
        Assert(n_levels > 1, 'n_levels <= 2')

        self.n_levels = n_levels
        # ---------------------------------------------------------

    # -----------------------------------------------------------------------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------



    # -----------------------------------------------------------------------------------------------------------------
    # ---------------------------------------------------- WC_INFO ----------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------
    def wc_info(self):
        cprint('wc: ', 'yellow', attrs=['bold'], end='\n')

        for k in self.wc.keys():
            print("'", k, "'", ': ', to_Hz(self.wc[k]), sep='')

        print()
    # -----------------------------------------------------------------------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------



    # -----------------------------------------------------------------------------------------------------------------
    # ---------------------------------------------------- WA_INFO ----------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------
    def wa_info(self):
        cprint('wa: ', 'yellow', attrs=['bold'], end='\n')

        for k in range(len(self.wa)):
            print(to_Hz(self.wa[k]), sep='')

        print()
    # -----------------------------------------------------------------------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------



    # -----------------------------------------------------------------------------------------------------------------
    # ---------------------------------------------------- G_INFO -----------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------
    def g_info(self):
        cprint('g: ', 'yellow', attrs=['bold'], end='\n')

        for k in self.g.keys():
            print("'", k, "'", ': ', to_Hz(self.g[k]), sep='')

        print()
    # -----------------------------------------------------------------------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------



    # -----------------------------------------------------------------------------------------------------------------
    # ---------------------------------------------------- N_ATOMS_INFO -----------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------
    def n_atoms_info(self):
        cprint('n_atoms: ', 'yellow', attrs=['bold'], end='')

        print(self.n_atoms)

        print()
    # -----------------------------------------------------------------------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------



    # -----------------------------------------------------------------------------------------------------------------
    # ---------------------------------------------------- N_LEVELS_INFO ----------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------
    def n_levels_info(self):
        cprint('n_levels: ', 'yellow', attrs=['bold'], end='')

        print(self.n_levels)

        print()
    # -----------------------------------------------------------------------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------



    # -----------------------------------------------------------------------------------------------------------------
    # ---------------------------------------------------- INFO -------------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------
    def info(self, title='Cavity:'):
        cprint(title, 'green', attrs=['bold'])

        print()

        self.wc_info()
        self.wa_info()
        self.g_info()
        self.n_atoms_info()
        self.n_levels_info()
    # -----------------------------------------------------------------------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------

# =====================================================================================================================
