from PyQuantum.Common.Matrix import *

import numpy as np
# import pandas as pd
from scipy.sparse import identity, kron, csc_matrix

class Hamiltonian(Matrix):
    # -----------------------------------------------------------------------------------------------------------------
    # ---------------------------------------------------- INIT -------------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------
    def __init__(self, capacity, cavity, RWA=True, iprint=False, iprint_symb=False):
        self.capacity = capacity
        self.cavity = cavity

        # |00i, |01i, |10i, |11i, |0ti
        self.states = [
        	'00',
        	'01',
        	'10',
        	'11',
        	'0t'
        ]

        self.data = [
        	[		 0, 		0, 		   0, 			0, 		   0],
        	[		 0, cavity.wc, 		   0, 			0, 		   0],
        	[		 0, 		0, cavity.wc, 			0,  cavity.g],
        	[		 0, 		0, 		   0, 2*cavity.wc, 		   0],
        	[		 0, 		0, 	cavity.g, 			0, cavity.wc]
        ]

        self.size = len(self.data)
        self.data = csc_matrix(self.data)

    # -----------------------------------------------------------------------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------
    

    # -----------------------------------------------------------------------------------------------------------------
    # ---------------------------------------------------- PRINT STATES -----------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------
    def print_states(self):
        cprint("Basis:\n", "green")

        for i in self.states:
            print(i)

        print()
    # -----------------------------------------------------------------------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------
    
    def print(self):
    	for i in self.data.toarray():
    		print(i)